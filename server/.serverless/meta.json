{
  "/Users/jonfairbanks/Documents/GitHub/yo/server": {
    "versionSfCore": null,
    "versionFramework": "4.4.5",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "default-aws-credential-resolver": "<REDACTED>"
    },
    "composeServiceName": null,
    "servicePath": "/Users/jonfairbanks/Documents/GitHub/yo/server",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "yo-api-lambda",
      "provider": {
        "name": "aws",
        "runtime": "nodejs18.x",
        "environment": {
          "NODE_ENV": "dev",
          "MONGO_URI": "mongodb+srv://yodawg:5v4wBu71I2zxGSne@fairbanks-io.mydxp.azure.mongodb.net/yo?retryWrites=true&w=majority"
        },
        "stage": "dev",
        "region": "us-east-1",
        "versionFunctions": true
      },
      "plugins": [
        "serverless-offline"
      ],
      "functions": {
        "app": {
          "handler": "src/index.handler",
          "events": [
            {
              "http": {
                "path": "/",
                "method": "get"
              }
            },
            {
              "http": {
                "path": {
                  "proxy+": null
                },
                "method": "any"
              }
            }
          ],
          "name": "yo-api-lambda-dev-app"
        }
      },
      "custom": {
        "serverless-offline": {
          "port": 3000,
          "host": "localhost",
          "babelOptions": {
            "presets": [
              "env"
            ]
          }
        }
      }
    },
    "serviceRawFile": "service: yo-api-lambda\n\nprovider:\n  name: aws\n  runtime: nodejs18.x\n  environment:\n    NODE_ENV: dev\n    MONGO_URI: mongodb+srv://yodawg:5v4wBu71I2zxGSne@fairbanks-io.mydxp.azure.mongodb.net/yo?retryWrites=true&w=majority\n\nplugins:\n  - serverless-offline\n\nfunctions:\n  app:\n    handler: src/index.handler\n    events:\n      - http:\n          path: /\n          method: get\n      - http:\n          path: {proxy+}\n          method: any\n\ncustom:\n  serverless-offline:\n    port: 3000\n    host: localhost\n    babelOptions:\n      presets: [\"env\"]",
    "command": [
      "offline",
      "start"
    ],
    "options": {},
    "error": {
      "message": "path.startsWith is not a function",
      "stack": "TypeError: path.startsWith is not a function\n    at generateHapiPath (file:///Users/jonfairbanks/Documents/GitHub/yo/server/node_modules/serverless-offline/src/utils/generateHapiPath.js:2:23)\n    at HttpServer.createRoutes (file:///Users/jonfairbanks/Documents/GitHub/yo/server/node_modules/serverless-offline/src/events/http/HttpServer.js:997:18)\n    at #createEvent (file:///Users/jonfairbanks/Documents/GitHub/yo/server/node_modules/serverless-offline/src/events/http/Http.js:41:22)\n    at file:///Users/jonfairbanks/Documents/GitHub/yo/server/node_modules/serverless-offline/src/events/http/Http.js:46:24\n    at Array.forEach (<anonymous>)\n    at Http.create (file:///Users/jonfairbanks/Documents/GitHub/yo/server/node_modules/serverless-offline/src/events/http/Http.js:45:12)\n    at #createHttp (file:///Users/jonfairbanks/Documents/GitHub/yo/server/node_modules/serverless-offline/src/ServerlessOffline.js:201:16)\n    at async Promise.all (index 0)\n    at async ServerlessOffline.start (file:///Users/jonfairbanks/Documents/GitHub/yo/server/node_modules/serverless-offline/src/ServerlessOffline.js:107:5)\n    at async PluginManager.runHooks (file:///Users/jonfairbanks/.serverless/releases/4.4.5/package/dist/sf-core.js:915:9311)"
    },
    "params": {},
    "machineId": "207bbefc63916c681c033217f312cb0c",
    "stage": "dev",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "7d05998a-d7a6-4e07-a173-00b2d81140a3",
    "orgName": "fairbanksio",
    "userId": "R2c1qY1GnbzdKL68Wh",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "fairbanksio",
    "subscription": null,
    "userEmail": "fairplay89@gmail.com",
    "serviceProviderAwsRegion": "us-east-1",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "872515285419",
    "projectType": "traditional",
    "versionSf": "4.4.5",
    "serviceProviderAwsCfStackName": "yo-api-lambda-dev",
    "serviceUniqueId": null,
    "serviceProviderAwsCfStackId": null,
    "serviceProviderAwsCfStackCreated": null,
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": null,
    "serviceProviderAwsCfStackOutputs": null
  }
}